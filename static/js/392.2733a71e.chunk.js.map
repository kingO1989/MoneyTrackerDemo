{"version":3,"file":"static/js/392.2733a71e.chunk.js","mappings":"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","sources":["Pages/Components/Account/CreateAccount.js","Pages/Account.js","Pages/Components/Account/AccountTransactionList.js","Pages/Components/Account/AccountDetailsLeftView.js","Pages/Components/Account/AccountDetailsRightView.js","Pages/Components/Account/AccountDetailsView.js","Pages/Components/Account/CreatedAccountsList.js","Pages/Components/Helpers/Button.js","Pages/Components/Helpers/Dialog.js","Pages/Components/Helpers/Form.js","Pages/Components/Helpers/AccountHolders.js","Pages/Components/Helpers/TransactionTypes.js","Pages/Components/Helpers/TransactionCategory.js","Pages/Components/Helpers/FormInput.js","../node_modules/classnames/index.js"],"sourcesContent":["/* eslint-disable no-var */\r\n/* eslint-disable indent */\r\n/* eslint-disable prefer-const */\r\n/* eslint-disable react/react-in-jsx-scope */\r\n/* eslint-disable no-undef */\r\n/* eslint-disable spaced-comment */\r\n/* eslint-disable semi */\r\n/* eslint-disable curly */\r\n/* eslint-disable array-callback-return */\r\n/* eslint-disable padded-blocks */\r\n/* eslint-disable space-before-function-paren */\r\n/* eslint-disable no-trailing-spaces */\r\n/* eslint-disable no-multiple-empty-lines */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable quotes */\r\nimport { useContext, useState, useRef, useEffect, useCallback } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport Button from \"../Helpers/Button\";\r\nimport Form from \"../Helpers/Form\";\r\nimport AppContext from \"../../../Context/AppContext\";\r\nimport './CreateAccount.css';\r\n\r\n\r\nconst CreateAccountForm = ({ setCreateAccountBtnClicked }) => {\r\n    const { accounts, setAccount, currency } = useContext(AppContext);\r\n    const [name, setName] = useState(\"\");\r\n    const [balance, setBalance] = useState(0);\r\n    const form = useRef();\r\n    function CreateAccount() {\r\n\r\n\r\n        let networth = Number(balance)\r\n        let transactions = []\r\n        let incomes = []\r\n        let expenses = []\r\n        let totalExpense = 0\r\n        let totalExpenseInCurrency = currency + \" \" + totalExpense\r\n        let totalIncome = 0\r\n        let totalIncomeInCurrency = currency + \" \" + totalIncome\r\n\r\n        let newAccount = {\r\n            name,\r\n            networth,\r\n            transactions,\r\n            incomes,\r\n            expenses,\r\n            totalExpense,\r\n            totalExpenseInCurrency,\r\n            totalIncome,\r\n            totalIncomeInCurrency,\r\n            currency\r\n\r\n        }\r\n        setAccount((prev) => [...prev, newAccount]);\r\n        setName(\"\")\r\n        setBalance(0)\r\n        setCreateAccountBtnClicked(false)\r\n\r\n    }\r\n    useEffect(() => {\r\n        console.log(accounts)\r\n    }, [accounts])\r\n    return (\r\n        <>\r\n            <Form\r\n                ref={form}\r\n                fields={{\r\n                    name: { label: 'Name', type: 'text', onAction: function (e) { return setName(e.target.value) }, defaultValue: name },\r\n                    amount: { label: 'Initial Amount', type: 'number', onAction: function (e) { return setBalance(e.target.value) }, defaultValue: balance }\r\n                }}\r\n            />\r\n            <Button className=\".create-account-custom-button\" onClick={e => CreateAccount()}>submit</Button>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nCreateAccountForm.propTypes = {\r\n    setCreateAccountBtnClicked: PropTypes.func\r\n};\r\n\r\nexport default CreateAccountForm;\r\n","/* eslint-disable react/no-unescaped-entities */\r\n/* eslint-disable no-multiple-empty-lines */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-trailing-spaces */\r\n/* eslint-disable space-before-function-paren */\r\n/* eslint-disable quotes */\r\n/* eslint-disable multiline-ternary */\r\n/* eslint-disable react/react-in-jsx-scope */\r\n/* eslint-disable curly */\r\n/* eslint-disable indent */\r\nimport { useEffect, useState, useContext } from \"react\"\r\nimport AppContext from \"../Context/AppContext\"\r\nimport CreateAccountForm from \"./Components/Account/CreateAccount\"\r\nimport Body from \"./Components/Helpers/Body\"\r\nimport Button from \"./Components/Helpers/Button\"\r\nimport CreatedAccountsList from \"./Components/Account/CreatedAccountsList\"\r\nimport AccountDetailsView from \"./Components/Account/AccountDetailsView\"\r\nimport Dialog from \"./Components/Helpers/Dialog\"\r\nimport \"./Account.css\"\r\n\r\nconst Account = () => {\r\n    const { accounts } = useContext(AppContext)\r\n    const [createAccountBtnClicked, setCreateAccountBtnClicked] = useState(false)\r\n\r\n    function showAccordion(classname = 'total_income_accordion') {\r\n        var x = document.getElementsByClassName(\"total_income_accordion\")\r\n        if (x[0].className.indexOf(\"display\") === -1) {\r\n            x[0].className += \" display\"\r\n        } else {\r\n            x[0].className = x[0].className.replace(\" display\", \"\")\r\n        }\r\n    }\r\n\r\n\r\n    function OpenCreateAccountForm(e) {\r\n        if (createAccountBtnClicked === false)\r\n            setCreateAccountBtnClicked(true)\r\n        else\r\n            setCreateAccountBtnClicked(false)\r\n    }\r\n    useEffect(\r\n        () => {\r\n            // console.log(accounts)\r\n        }\r\n        , [accounts]\r\n    )\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            <h1>Account</h1>\r\n            <div className=\"filter\">\r\n            </div>\r\n            <div className=\"content_display\">\r\n                <Body>\r\n\r\n                    <div className=\"flex-container\">\r\n                        <Button className=\"acct-btn\" onClick={OpenCreateAccountForm}>\r\n                            + Account\r\n                        </Button>\r\n\r\n                    </div>\r\n                    {\r\n                        createAccountBtnClicked\r\n                            ? (\r\n                                <Dialog\r\n                                    modal\r\n                                    header=\"Create Account Profile\"\r\n                                    hasCancel\r\n                                    onAction={(type) => {\r\n                                        console.log(\"Dialog\")\r\n                                        setCreateAccountBtnClicked(false)\r\n                                        // setExample(null);\r\n                                    }}>\r\n                                    < CreateAccountForm setCreateAccountBtnClicked={setCreateAccountBtnClicked} />\r\n                                </Dialog>\r\n\r\n                            ) : \"\"\r\n                    }\r\n\r\n                    <AccountDetailsView />\r\n\r\n                </Body>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Account\r\n","/* eslint-disable operator-linebreak */\r\n/* eslint-disable react/jsx-key */\r\n/* eslint-disable indent */\r\n/* eslint-disable prefer-const */\r\n/* eslint-disable react/react-in-jsx-scope */\r\n/* eslint-disable no-undef */\r\n/* eslint-disable spaced-comment */\r\n/* eslint-disable semi */\r\n/* eslint-disable curly */\r\n/* eslint-disable array-callback-return */\r\n/* eslint-disable padded-blocks */\r\n/* eslint-disable space-before-function-paren */\r\n/* eslint-disable no-trailing-spaces */\r\n/* eslint-disable no-multiple-empty-lines */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable quotes */\r\n//import '';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport './AccountTransactionList.css';\r\nconst AccountTransactionList = ({ transaction, currency }) => {\r\n\r\n    function convertDate(date) {\r\n        let tempdate = new Date(date)\r\n        return tempdate.toDateString()\r\n    }\r\n    console.log(transaction)\r\n    return (\r\n        <>\r\n            <br></br>\r\n            <div className='container-account-list'>\r\n                <table className=\"account-list\">\r\n                    <thead>\r\n\r\n                    </thead>\r\n                    <tbody>\r\n\r\n                        {transaction ?\r\n                            transaction.map((transactionItem, id) => {\r\n\r\n                                return <tr key={id}>\r\n                                    <td>{convertDate(transactionItem.date)},{\" \"} </td>\r\n\r\n                                    <td> {currency\r\n                                        + \"\" + transactionItem.amount}</td>\r\n                                </tr>\r\n\r\n\r\n                            })\r\n                            : \"\"}\r\n\r\n\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n        </>\r\n\r\n\r\n    );\r\n}\r\n\r\nAccountTransactionList.propTypes = {\r\n    transaction: PropTypes.object,\r\n    currency: PropTypes.string\r\n\r\n};\r\n\r\nexport default AccountTransactionList\r\n","/* eslint-disable react/no-unescaped-entities */\r\n/* eslint-disable operator-linebreak */\r\n/* eslint-disable react/jsx-key */\r\n/* eslint-disable indent */\r\n/* eslint-disable prefer-const */\r\n/* eslint-disable react/react-in-jsx-scope */\r\n/* eslint-disable no-undef */\r\n/* eslint-disable spaced-comment */\r\n/* eslint-disable semi */\r\n/* eslint-disable curly */\r\n/* eslint-disable array-callback-return */\r\n/* eslint-disable padded-blocks */\r\n/* eslint-disable space-before-function-paren */\r\n/* eslint-disable no-trailing-spaces */\r\n/* eslint-disable no-multiple-empty-lines */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable quotes */\r\n\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nconst AccountDetailsLeftView = ({ accounts, accountDisplayHandler }) => {\r\n    return <>\r\n        {accounts.map((item, id) => {\r\n            return <div key={id} className=\"account_holder\" onClick={(e) => accountDisplayHandler(item)}>\r\n                <div className=\"name\"> {item.name}</div>\r\n                <div className=\"right_arrow\"></div>\r\n            </div>\r\n        })}\r\n\r\n\r\n    </>\r\n}\r\n\r\nAccountDetailsLeftView.propTypes = {\r\n    accounts: PropTypes.array,\r\n    accountDisplayHandler: PropTypes.func,\r\n    item: PropTypes.object\r\n}\r\nexport default AccountDetailsLeftView\r\n","/* eslint-disable react/no-unescaped-entities */\r\n/* eslint-disable operator-linebreak */\r\n/* eslint-disable react/jsx-key */\r\n/* eslint-disable indent */\r\n/* eslint-disable prefer-const */\r\n/* eslint-disable react/react-in-jsx-scope */\r\n/* eslint-disable no-undef */\r\n/* eslint-disable spaced-comment */\r\n/* eslint-disable semi */\r\n/* eslint-disable curly */\r\n/* eslint-disable array-callback-return */\r\n/* eslint-disable padded-blocks */\r\n/* eslint-disable space-before-function-paren */\r\n/* eslint-disable no-trailing-spaces */\r\n/* eslint-disable no-multiple-empty-lines */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable quotes */\r\n\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport AccountTransactionList from './AccountTransactionList'\r\n\r\n\r\nconst AccountDetailsRightView = ({ display, showAccordion }) => {\r\n    console.log(display)\r\n    return <>\r\n        <div className=\"right_view\">\r\n            <div className=\"account_details\">\r\n                <div className=\"total_income\">\r\n                    <span className=\"title\">Total Income</span>\r\n                    <span className=\"value\">{display ? display.currency + \"\" + display.totalIncome : \"\"}</span>\r\n                    <span className=\"view arrow_down\" onClick={(e) => showAccordion(\"total_income_accordion\")} >\r\n                        <i className=\"fa-solid fa-angle-down fa-xl\"></i>\r\n                    </span>\r\n                </div>\r\n\r\n                <div className=\"total_income_accordion\">\r\n                    {\r\n                        display\r\n                            ?\r\n                            <>\r\n                                <AccountTransactionList transaction={display.incomes} currency={display.currency} />\r\n                            </>\r\n                            : \"\"\r\n                    }\r\n                </div>\r\n                <div className=\"total_expenses\">\r\n                    <span className=\"title\">Total Expense</span>\r\n                    <span className=\"value\">{display ? display.currency + \"\" + display.totalExpense : \"\"}</span>\r\n                    <span className=\"view arrow_down\" onClick={() => showAccordion(\"total_expense_accordion\")}>\r\n                        <i className=\"fa-solid fa-angle-down fa-xl\"></i></span>\r\n                </div>\r\n                <div className=\"total_expense_accordion\">\r\n                    {\r\n                        display\r\n                            ?\r\n                            <>\r\n                                <AccountTransactionList transaction={display.expenses} currency={display.currency} />\r\n                            </>\r\n                            : \"\"\r\n                    }\r\n                </div>\r\n                <div className=\"networth\">\r\n                    <span className=\"title\">Networth {\" \"}</span>\r\n                    <span className=\"value\">{display ? display.currency + \"\" + display.networth : \"\"}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    </>\r\n}\r\n\r\nAccountDetailsRightView.propTypes = {\r\n    display: PropTypes.object,\r\n    showAccordion: PropTypes.func\r\n}\r\nexport default AccountDetailsRightView\r\n","/* eslint-disable react/no-unescaped-entities */\r\n/* eslint-disable operator-linebreak */\r\n/* eslint-disable react/jsx-key */\r\n/* eslint-disable indent */\r\n/* eslint-disable prefer-const */\r\n/* eslint-disable react/react-in-jsx-scope */\r\n/* eslint-disable no-undef */\r\n/* eslint-disable spaced-comment */\r\n/* eslint-disable semi */\r\n/* eslint-disable curly */\r\n/* eslint-disable array-callback-return */\r\n/* eslint-disable padded-blocks */\r\n/* eslint-disable space-before-function-paren */\r\n/* eslint-disable no-trailing-spaces */\r\n/* eslint-disable no-multiple-empty-lines */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable quotes */\r\n\r\nimport { useState, useContext } from \"react\";\r\nimport AppContext from \"../../../Context/AppContext\";\r\nimport AccountTransactionList from \"./AccountTransactionList\";\r\nimport './AccountDetailsView.css';\r\nimport AccountDetailsLeftView from \"./AccountDetailsLeftView\";\r\nimport AccountDetailsRightView from \"./AccountDetailsRightView\";\r\nimport CreatedAccountsList from \"./CreatedAccountsList\";\r\n\r\n\r\nconst AccountDetailsView = () => {\r\n    const { accounts } = useContext(AppContext);\r\n    const [display, setDisplay] = useState(accounts[0] ? accounts[0] : \"\");\r\n    console.log(accounts[0])\r\n\r\n    function accountDisplayHandler(item) {\r\n        console.log(item)\r\n        setDisplay(() => item);\r\n    }\r\n    function showAccordion(classname) {\r\n        console.log(classname)\r\n        var x = document.getElementsByClassName(classname)\r\n\r\n        if (x[0].className.indexOf(\"display\") === -1) {\r\n            x[0].className += \" display\"\r\n        } else {\r\n            x[0].className = x[0].className.replace(\" display\", \"\")\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"account-view-container\">\r\n                <div className=\"left_view\">\r\n                    {accounts ?\r\n                        <AccountDetailsLeftView accountDisplayHandler={accountDisplayHandler} accounts={accounts} />\r\n                        : \"\"}\r\n                </div>\r\n                <AccountDetailsRightView display={display} showAccordion={showAccordion} />\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n        </>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default AccountDetailsView\r\n","/* eslint-disable operator-linebreak */\r\n/* eslint-disable react/jsx-key */\r\n/* eslint-disable indent */\r\n/* eslint-disable prefer-const */\r\n/* eslint-disable react/react-in-jsx-scope */\r\n/* eslint-disable no-undef */\r\n/* eslint-disable spaced-comment */\r\n/* eslint-disable semi */\r\n/* eslint-disable curly */\r\n/* eslint-disable array-callback-return */\r\n/* eslint-disable padded-blocks */\r\n/* eslint-disable space-before-function-paren */\r\n/* eslint-disable no-trailing-spaces */\r\n/* eslint-disable no-multiple-empty-lines */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable quotes */\r\n\r\nimport { useEffect, useState, useContext } from \"react\";\r\nimport AppContext from \"../../../Context/AppContext\";\r\nimport './CreateAccount.css';\r\n\r\n\r\nconst CreatedAccountsList = () => {\r\n    const { accounts } = useContext(AppContext);\r\n    return (\r\n        <div className=\"created-account-list\">\r\n            <br></br>\r\n            <h4>Total</h4>\r\n            <table className=\"account-list\">\r\n                <thead>\r\n                    <tr>\r\n                        <td><input type=\"checkbox\" /></td>\r\n                        <td>Owner</td>\r\n                        <td>Amount</td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n\r\n\r\n\r\n                    {accounts ?\r\n                        accounts.map((item, id) => {\r\n\r\n                            return <tr><td><input type=\"checkbox\" /></td><td>{item.name}</td><td> {item.networth}</td></tr>\r\n\r\n                        })\r\n                        : \"\"}\r\n\r\n\r\n                </tbody>\r\n            </table>\r\n\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default CreatedAccountsList\r\n","/* eslint-disable indent */\r\n/* eslint-disable react/prop-types */\r\nimport React from 'react'\r\nimport classNames from 'classnames'\r\nimport PropTypes from 'prop-types'\r\nimport './css/Button.css'\r\n\r\nconst Button = (props) => {\r\n    return (\r\n        <>\r\n            {props.href\r\n                ? (\r\n                    <a {...props} className={classNames('Button', props.className)}>\r\n                        {props.children}\r\n                    </a>\r\n\r\n                )\r\n                : (\r\n                    <>\r\n                        <span><button {...props} className={classNames('Button', props.className)}></button></span>\r\n                    </>\r\n                )\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\nButton.propTypes = {\r\n    href: PropTypes.string\r\n}\r\n\r\nexport default Button\r\n","/* eslint-disable multiline-ternary */\r\n/* eslint-disable comma-dangle */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable operator-linebreak */\r\n/* eslint-disable react/jsx-key */\r\n/* eslint-disable indent */\r\n/* eslint-disable prefer-const */\r\n/* eslint-disable react/react-in-jsx-scope */\r\n/* eslint-disable no-undef */\r\n/* eslint-disable spaced-comment */\r\n/* eslint-disable semi */\r\n/* eslint-disable curly */\r\n/* eslint-disable array-callback-return */\r\n/* eslint-disable padded-blocks */\r\n/* eslint-disable space-before-function-paren */\r\n/* eslint-disable no-trailing-spaces */\r\n/* eslint-disable no-multiple-empty-lines */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable quotes */\r\nimport { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from './Button';\r\nimport './css/Dialog.css';\r\n\r\nfunction Dialog(props) {\r\n    const {\r\n        header,\r\n        modal = false,\r\n        extendedDismiss = true,\r\n        confirmLabel = 'ok',\r\n        onAction = () => { },\r\n        hasCancel = true,\r\n    } = props;\r\n    useEffect(() => {\r\n        function dismissClick(e) {\r\n            if (e.target.classList.contains('DialogModal')) {\r\n                onAction('dismiss');\r\n            }\r\n        }\r\n\r\n        function dismissKey(e) {\r\n            if (e.key === 'Escape') {\r\n                onAction('dismiss');\r\n            }\r\n        }\r\n        if (modal) {\r\n            document.body.classList.add('DialogModalOpen');\r\n            if (extendedDismiss) {\r\n                document.body.addEventListener('click', dismissClick);\r\n                document.addEventListener('keydown', dismissKey);\r\n            }\r\n        }\r\n        return () => {\r\n            document.body.classList.remove('DialogModalOpen');\r\n            document.body.removeEventListener('click', dismissClick);\r\n            document.removeEventListener('keydown', dismissKey);\r\n        };\r\n    }, [onAction, modal, extendedDismiss]);\r\n\r\n    return (\r\n        <div className={modal ? 'Dialog DialogModal' : 'Dialog'}>\r\n            <div className={modal ? 'DialogModalWrap' : null}>\r\n                <div className=\"DialogHeader\">{header}</div>\r\n                <div className=\"DialogBody\">{props.children}</div>\r\n                <div className=\"DialogFooter\">\r\n                    {hasCancel ? (\r\n                        <Button\r\n                            className=\"DialogDismiss\"\r\n                            onClick={() => onAction('dismiss')}>\r\n                            Cancel\r\n                        </Button>\r\n                    ) : null}\r\n                    <Button onClick={() => onAction(hasCancel ? 'confirm' : 'dismiss')}>\r\n                        {confirmLabel}\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nDialog.propTypes = {\r\n    header: PropTypes.string.isRequired,\r\n    modal: PropTypes.bool,\r\n    extendedDismiss: PropTypes.bool,\r\n    confirmLabel: PropTypes.string,\r\n    onAction: PropTypes.func,\r\n    hasCancel: PropTypes.bool,\r\n};\r\n\r\nexport default Dialog;\r\n","/* eslint-disable react/display-name */\r\n/* eslint-disable multiline-ternary */\r\n/* eslint-disable comma-dangle */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable operator-linebreak */\r\n/* eslint-disable react/jsx-key */\r\n/* eslint-disable indent */\r\n/* eslint-disable prefer-const */\r\n/* eslint-disable react/react-in-jsx-scope */\r\n/* eslint-disable no-undef */\r\n/* eslint-disable spaced-comment */\r\n/* eslint-disable semi */\r\n/* eslint-disable curly */\r\n/* eslint-disable array-callback-return */\r\n/* eslint-disable padded-blocks */\r\n/* eslint-disable space-before-function-paren */\r\n/* eslint-disable no-trailing-spaces */\r\n/* eslint-disable no-multiple-empty-lines */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable quotes */\r\n\r\nimport { forwardRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport FormInput from './FormInput';\r\nimport './css/Form.css';\r\n\r\nconst Form = forwardRef(({ fields, initialData = {}, readonly = false }, ref) => {\r\n  return (\r\n    <form className=\"Form\" ref={ref}>\r\n      {Object.keys(fields).map((id) => {\r\n        const prefilled = initialData[id];\r\n        const { label, type, accounts, onAccountsChange, onAction, onTransactionChange, defaultValue, onCategoryChange } = fields[id];\r\n        if (readonly) {\r\n\r\n          return (\r\n            <div className=\"FormRow\" key={id}>\r\n              <label className=\"FormLabel\" htmlFor={id}>\r\n                {label}\r\n              </label>\r\n              <FormInput\r\n                id={id}\r\n                type={type}\r\n                accounts={accounts}\r\n                onAccountsChange={onAccountsChange}\r\n                onAction={onAction}\r\n                onTransactionChange={onTransactionChange}\r\n                onCategoryChange={onCategoryChange}\r\n                defaultValue={defaultValue}\r\n                readOnly={true}\r\n\r\n              />\r\n            </div>\r\n          );\r\n        }\r\n        return (\r\n          <div className=\"FormRow\" key={id}>\r\n            <label className=\"FormLabel\" htmlFor={id}>\r\n              {label}\r\n            </label>\r\n            <FormInput\r\n              id={id}\r\n              type={type}\r\n              accounts={accounts}\r\n              onAccountsChange={onAccountsChange}\r\n              onAction={onAction}\r\n              onTransactionChange={onTransactionChange}\r\n              defaultValue={defaultValue}\r\n              onCategoryChange={onCategoryChange}\r\n\r\n            />\r\n          </div>\r\n        );\r\n      })}\r\n    </form>\r\n  );\r\n});\r\n\r\nForm.propTypes = {\r\n  fields: PropTypes.objectOf(\r\n    PropTypes.shape({\r\n      label: PropTypes.string.isRequired,\r\n      type: PropTypes.oneOf(['textarea', 'input', 'year', 'AccountHolders', 'TransactionCategory']),\r\n      options: PropTypes.arrayOf(PropTypes.object),\r\n    }),\r\n  ).isRequired,\r\n  initialData: PropTypes.object,\r\n  readonly: PropTypes.bool,\r\n};\r\n\r\nexport default Form;\r\n","/* eslint-disable react/prop-types */\r\n/* eslint-disable operator-linebreak */\r\n/* eslint-disable react/jsx-key */\r\n/* eslint-disable indent */\r\n/* eslint-disable prefer-const */\r\n/* eslint-disable react/react-in-jsx-scope */\r\n/* eslint-disable no-undef */\r\n/* eslint-disable spaced-comment */\r\n/* eslint-disable semi */\r\n/* eslint-disable curly */\r\n/* eslint-disable array-callback-return */\r\n/* eslint-disable padded-blocks */\r\n/* eslint-disable space-before-function-paren */\r\n/* eslint-disable no-trailing-spaces */\r\n/* eslint-disable no-multiple-empty-lines */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable quotes */\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\nfunction AccountHolders({ id, defaultValue = '', accounts = [], onAccountsChange }) {\r\n    return (\r\n        <>\r\n            <select\r\n                className=\"form-control\"\r\n                onChange={onAccountsChange}\r\n                defaultValue={accounts[0]}\r\n            >\r\n                <option >Select account holder</option>\r\n                {\r\n                    accounts.map((account) => (\r\n                        <>\r\n                            <option value={account.name}>{account.name}</option>\r\n                        </>\r\n                    ))\r\n                }\r\n\r\n            </select>\r\n        </>\r\n    );\r\n}\r\n\r\nAccountHolders.propTypes = {\r\n    defaultValue: PropTypes.string,\r\n    accounts: PropTypes.arrayOf(PropTypes.string)\r\n};\r\n\r\nexport default AccountHolders;\r\n","/* eslint-disable no-multi-spaces */\r\n/* eslint-disable no-unneeded-ternary */\r\n/* eslint-disable react/display-name */\r\n/* eslint-disable multiline-ternary */\r\n/* eslint-disable comma-dangle */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable operator-linebreak */\r\n/* eslint-disable react/jsx-key */\r\n/* eslint-disable indent */\r\n/* eslint-disable prefer-const */\r\n/* eslint-disable react/react-in-jsx-scope */\r\n/* eslint-disable no-undef */\r\n/* eslint-disable spaced-comment */\r\n/* eslint-disable semi */\r\n/* eslint-disable curly */\r\n/* eslint-disable array-callback-return */\r\n/* eslint-disable padded-blocks */\r\n/* eslint-disable space-before-function-paren */\r\n/* eslint-disable no-trailing-spaces */\r\n/* eslint-disable no-multiple-empty-lines */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable quotes */\r\nimport PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n\r\nfunction TransactionTypes({ id, defaultValue = '', onTransactionChange }) {\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n\r\n            <select\r\n                className=\"form-control\"\r\n\r\n                onChange={onTransactionChange}\r\n\r\n\r\n            >\r\n                <option >Select Transaction Type</option>\r\n                <option value=\"Expense\">Expense</option>\r\n                <option value=\"Income\">Income</option>\r\n\r\n            </select>\r\n\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nTransactionTypes.propTypes = {\r\n    defaultValue: PropTypes.string,\r\n    accounts: PropTypes.arrayOf(PropTypes.string),\r\n};\r\n\r\nexport default TransactionTypes;\r\n","/* eslint-disable react/prop-types */\r\n/* eslint-disable operator-linebreak */\r\n/* eslint-disable react/jsx-key */\r\n/* eslint-disable indent */\r\n/* eslint-disable prefer-const */\r\n/* eslint-disable react/react-in-jsx-scope */\r\n/* eslint-disable no-undef */\r\n/* eslint-disable spaced-comment */\r\n/* eslint-disable semi */\r\n/* eslint-disable curly */\r\n/* eslint-disable array-callback-return */\r\n/* eslint-disable padded-blocks */\r\n/* eslint-disable space-before-function-paren */\r\n/* eslint-disable no-trailing-spaces */\r\n/* eslint-disable no-multiple-empty-lines */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable quotes */\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n\r\nconst category = [\r\n    \"Food and beverage\",\r\n    \"Transportation\",\r\n    \"Entertainment\",\r\n    \"Mortgage or rent\",\r\n    \"Family and friends\"\r\n]\r\nfunction TransactionCategory({ id, defaultValue = '', onCategoryChange }) {\r\n    return (\r\n        <>\r\n            <select\r\n                className=\"form-control\"\r\n                onChange={onCategoryChange}\r\n\r\n            >\r\n                <option >Expense Category</option>\r\n                {\r\n                    category.map((spending) => (\r\n                        <>\r\n                            <option value={spending}>{spending}</option>\r\n                        </>\r\n                    ))\r\n                }\r\n\r\n            </select>\r\n        </>\r\n    );\r\n}\r\n\r\nTransactionCategory.propTypes = {\r\n    defaultValue: PropTypes.string,\r\n    accounts: PropTypes.arrayOf(PropTypes.string)\r\n};\r\n\r\nexport default TransactionCategory;\r\n","/* eslint-disable no-multi-spaces */\r\n/* eslint-disable no-unneeded-ternary */\r\n/* eslint-disable react/display-name */\r\n/* eslint-disable multiline-ternary */\r\n/* eslint-disable comma-dangle */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable operator-linebreak */\r\n/* eslint-disable react/jsx-key */\r\n/* eslint-disable indent */\r\n/* eslint-disable prefer-const */\r\n/* eslint-disable react/react-in-jsx-scope */\r\n/* eslint-disable no-undef */\r\n/* eslint-disable spaced-comment */\r\n/* eslint-disable semi */\r\n/* eslint-disable curly */\r\n/* eslint-disable array-callback-return */\r\n/* eslint-disable padded-blocks */\r\n/* eslint-disable space-before-function-paren */\r\n/* eslint-disable no-trailing-spaces */\r\n/* eslint-disable no-multiple-empty-lines */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable quotes */\r\nimport PropTypes from 'prop-types';\r\nimport AccountHolders from './AccountHolders';\r\nimport TransactionTypes from './TransactionTypes';\r\nimport TransactionCategory from './TransactionCategory';\r\n\r\n\r\nfunction FormInput({ type = 'input', defaultValue, accounts = [], onAccountsChange, onTransactionChange, onCategoryChange, readOnly, onAction, ...rest }) {\r\n\r\n    function GetDate() {\r\n        var curr = new Date();\r\n        curr.setDate(curr.getDate() + 3);\r\n        var currdate = curr.toISOString().substring(0, 10);\r\n        return currdate;\r\n    }\r\n\r\n    switch (type) {\r\n        case 'date':\r\n            return (\r\n                <input\r\n                    {...rest}\r\n                    onChange={onAction}\r\n                    type=\"date\"\r\n                    defaultValue={\r\n\r\n                        GetDate()\r\n                    }\r\n                />\r\n            );\r\n\r\n        case 'textarea':\r\n            return <textarea defaultValue={defaultValue} onChange={onAction} {...rest} />;\r\n\r\n        case 'number':\r\n            return <input type=\"number\" value={defaultValue} onChange={onAction} {...rest} />;\r\n\r\n        case 'AccountHolders':\r\n            return <AccountHolders defaultValue={defaultValue} accounts={accounts} {...rest} onAccountsChange={onAccountsChange} />;\r\n\r\n        case 'TransactionTypes':\r\n            return <TransactionTypes defaultValue={defaultValue}  {...rest} onTransactionChange={onTransactionChange} />;\r\n\r\n        case 'TransactionCategory':\r\n            return <TransactionCategory defaultValue={defaultValue}  {...rest} onCategoryChange={onCategoryChange} />;\r\n\r\n        case 'text':\r\n            return <input type=\"text\" onChange={onAction} value={defaultValue} readOnly={readOnly ? true : false} />\r\n\r\n        default:\r\n\r\n            // eslint-disable-next-line no-multi-spaces\r\n            return <input type=\"text\" onChange={onAction} value={defaultValue} readOnly={readOnly ? true : false}   {...rest} />\r\n\r\n    }\r\n}\r\n\r\nFormInput.propTypes = {\r\n    type: PropTypes.oneOf(['textarea', 'input', 'date', 'AccountHolders', 'TransactionTypes']),\r\n    defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    options: PropTypes.array,\r\n};\r\n\r\nexport default FormInput;\r\n","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"names":["_ref","setCreateAccountBtnClicked","_useContext","useContext","AppContext","accounts","setAccount","currency","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","balance","setBalance","form","useRef","useEffect","console","log","_jsxs","_Fragment","children","_jsx","Form","ref","fields","label","type","onAction","e","target","value","defaultValue","amount","Button","className","onClick","networth","Number","newAccount","transactions","incomes","expenses","totalExpense","totalExpenseInCurrency","totalIncome","totalIncomeInCurrency","prev","concat","_toConsumableArray","CreateAccount","createAccountBtnClicked","Body","Dialog","modal","header","hasCancel","CreateAccountForm","AccountDetailsView","transaction","map","transactionItem","id","date","Date","toDateString","accountDisplayHandler","item","display","showAccordion","AccountTransactionList","setDisplay","AccountDetailsLeftView","AccountDetailsRightView","classname","x","document","getElementsByClassName","indexOf","replace","props","href","_objectSpread","classNames","_props$modal","_props$extendedDismis","extendedDismiss","_props$confirmLabel","confirmLabel","_props$onAction","_props$hasCancel","dismissClick","classList","contains","dismissKey","key","body","add","addEventListener","remove","removeEventListener","forwardRef","_ref$initialData","initialData","_ref$readonly","readonly","Object","keys","_fields$id","onAccountsChange","onTransactionChange","onCategoryChange","htmlFor","FormInput","readOnly","_ref$accounts","onChange","account","category","spending","_ref$type","rest","_objectWithoutProperties","_excluded","curr","setDate","getDate","toISOString","substring","GetDate","AccountHolders","TransactionTypes","TransactionCategory","hasOwn","hasOwnProperty","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","prototype","includes","call","join","module","exports","default"],"sourceRoot":""}